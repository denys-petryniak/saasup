:root {
  font-family: $font-family--primary;
  letter-spacing: $tracking--normal;
  color: $secondary-color--dark;

  /* Disables automatic font synthesis. Helps ensure that only the specified font weights and styles are used,
     which can improve visual consistency across different browsers and operating systems. */
  font-synthesis: none;

  /* Optimizes text rendering for legibility. This setting can make text more readable, especially on small screens. */
  text-rendering: optimizeLegibility;

  /* Enables antialiasing for WebKit browsers, which can make text appear smoother. */
  -webkit-font-smoothing: antialiased;

  /* Enables grayscale antialiasing for Firefox on macOS, which can improve text appearance. */
  -moz-osx-font-smoothing: grayscale;

  /* Prevents browsers from automatically resizing text based on user settings.
     This helps maintain consistent text sizes across different devices and user preferences. */
  -webkit-text-size-adjust: 100%;
}

html {
  height: 100%;
}

body,
#__nuxt,
.layout {
  min-height: 100vh;
}

body {
  // Using overflow-x: clip to prevent horizontal scroll while preserving sticky positioning for child elements
  overflow-x: clip;
  @include fluid-typography(
    $min-font-size: $text--lg,
    $max-font-size: $text--2xl,
    $min-line-height: $leading--cozy,
    $max-line-height: $leading--normal
  );
}

p,
li,
h1,
h2,
h3,
h4,
h5,
h6,
.button {
  // Help prevent overflow of long words/names/URLs
  overflow-wrap: break-word;
  // Adds a hyphen where the word breaks, if supported (No Blink)
  hyphens: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: $spacing--2xl 0;
  font-weight: $font--extrabold;
  letter-spacing: $tracking--tight;
  text-wrap: balance;
  color: $primary-color--dark;
}

p {
  margin: $spacing--2xl 0;

  &:empty {
    margin: 0;
  }

  &:first-child {
    margin-top: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
}

img,
picture,
svg {
  display: block;
  max-width: 100%;
}

input,
select,
textarea {
  width: 100%;
}

img {
  height: auto;
}

button {
  border: none;
  cursor: pointer;
}

a {
  display: inline-block;
  text-decoration: none;
  color: $primary-color--dark;

  @media (hover: hover) {
    &:hover {
      color: $primary-color--light;
    }
  }
}

li {
  line-height: $leading--cozy;
}

.router-link-active:not(.button),
.router-link-exact-active:not(.button) {
  color: $primary-color--light !important;
}

span {
  &.icon,
  &.iconify {
    vertical-align: middle;
  }
}

:focus:not(:focus-visible) {
  outline: none;
}

:focus-visible {
  outline-offset: 0.15rem;
  outline-color: rgba($primary-color--light, 0.5);

  @media (prefers-reduced-motion: no-preference) {
    transition: outline-offset 0.25s ease-out;
  }
}

// General typography defaults for external content like Markdown or CMS-rendered HTML
.rich-text {
  ul,
  ol {
    margin: clamped($min-size: $spacing--2xl, $max-size: $spacing--4xl) 0;
    padding-left: clamped($min-size: $spacing--4xl, $max-size: $spacing--6xl);

    li {
      margin-bottom: $spacing--lg;

      &::marker {
        color: $primary-color--light;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  blockquote {
    margin: clamped($min-size: $spacing--4xl, $max-size: $spacing--8xl) 0;
    padding: clamped($min-size: $spacing--4xl, $max-size: $spacing--12xl);
    border-left: 60px solid $primary-color--light;
    border-radius: $rounded--3xl;
    color: $primary-color--dark;
    background-color: rgba($secondary-color--dark, 0.05);

    @include breakpoint('sm') {
      border-left-width: 80px;
    }

    @include breakpoint('md') {
      border-left-width: 100px;
    }

    p:first-of-type {
      margin-top: 0;
    }
  }

  code {
    padding: $spacing--xs $spacing--sm;
    background-color: rgba($primary-color--light, 0.1);
    border-radius: $rounded--lg;
  }

  pre {
    background-color: $secondary-color--dark;
    padding: clamped($min-size: $spacing--2xl, $max-size: $spacing--4xl);
    border-radius: $rounded--xl;
    overflow-x: auto;
    color: $secondary-color--light;
  }

  a {
    font-weight: $font--semibold;
    color: rgba($primary-color--light, 0.8);

    @media (hover: hover) {
      &:hover {
        color: $primary-color--light;
      }
    }
  }

  // Apply margin reset to the first element of the group
  :where(p, h1, h2, h3, h4, h5, h6, ul, ol, blockquote):first-child {
    margin-top: 0;
  }

  // Apply margin reset to the last element of the group
  :where(p, h1, h2, h3, h4, h5, h6, ul, ol, blockquote):last-child {
    margin-bottom: 0;
  }
}

.error-message {
  @include fluid-typography(
    $min-font-size: $text--lg,
    $max-font-size: $text--xl,
    $min-line-height: $leading--tight,
    $max-line-height: $leading--condensed
  );
  color: $error-color;
}
